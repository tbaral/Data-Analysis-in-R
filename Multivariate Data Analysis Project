# using the thyroid dataset from the UCI repository website
# only these variables are used in the analysis:
#5 hormones
#sick
#age
#sex
#pregant
#lithium

dat<-read.table("Thyroid2.txt",header=TRUE)

#Change factor variables to factors
f<-c(2:5,11)
for(i in f){
	dat[,i]<-as.factor(dat[,i])
}

summary(dat)


# to remove a specific column of the dataset by the columns name
dat[-which(colnames(dat)=="Hypopituitary")]


#parallel coordinates plot
library(MASS)
color<-dat[,11]

color2<-ifelse(color==1,"royalblue1",ifelse(color==2,"seagreen1","salmon"))

par(oma= c(1,2,3,0),xpd=TRUE)
parcoord(dat[,c(9,6,1,8,7,10)],col=color2)
legend(.5,1.2,col=unique(color2),legend=c("hypothyroidism","hyperthyroidism","normal"),lwd=1)


#outlier detection from the parallel coordinates plot
#the obs with max and 2nd max T3 might be outliers
which(dat$T3==max(dat$T3))#4882
which(dat$T3==max(dat[-4882,7]))#5312

# density plots
plot(density(dat$TSH))


# *** Scatterplot Matrix ****
# plots numeric/hormone variables with boxplots on the diagonal
library(SciViews)
pairs((dat[c(14:18)]),col=color2,diag.panel=panel.boxplot,main="Thyroid Hormone Variables")

par(xpd=TRUE)
legend(print(locator(1)),legend=c("Hyperthyroidism","Hypothyroidism","Normal"),col=unique(color2),horiz=TRUE,pch=1)


# to look at contingency tables with class variable and other categorical variables
(table(c(dat[19],dat[4])))
(table(c(dat[9],dat[13])))


# ***** Linear Disciminate Analysis *****
library(MASS)
help(lda)
da<-as.matrix(dat)
fit<-lda(Class~TSH+T3+TT4+T4U+FTI+Age ,data=dat,CV=FALSE)
summary(fit)
fit
names(fit)
#what percentage of variation is explained by each linear discriminate component
prop = fit$svd^2/sum(fit$svd^2)
pfit<-predict(object=fit,newdata=dat)$class
names(pfit)
head(pfit$x[,1])
plot(pfit$x[,1],pfit$x[,2],col=color2,xlab="LD1 (99.3%)",ylab="LD2 (0.66%)",main="Linear Discriminate Components")
legend(print(locator(1)),legend=c("Hyperthyroidism","Hypothyroidism","Normal"),col=unique(color2),horiz=TRUE,pch=1)

# evaluate in sample performance
actual<-dat[,11]
predicted<-pfit
t<-table(predicted,actual)
t
misclass<-sum(t[-which(t==diag(t))])/sum(t)
misclass #0.06347222

#Cross validate the lda model
fit<-lda(Class~TSH+T3+TT4+T4U+FTI+Age ,data=dat,CV=TRUE)
actual<-dat[,11]
predicted<-fit$class
t<-table(predicted,actual)
t
misclass<-sum(t[-which(t==diag(t))])/sum(t)
misclass #0.06361111


#try knn classification
library(class)
help(knn)
train<-sample(dim(dat)[1],size=dim(dat)[1]*.50)
fit2<-knn(dat[train,],dat[-train,],cl=dat[train,11],k=3,prob=TRUE)
summary(fit2)
summary(dat[-train,11])
attributes(.Last.value)

#check in sample performance
predicted<-fit2
actual<-dat[-train,11]
t<-table(predicted,actual)
t
misclass<-sum(t[-which(t==diag(t))])/sum(t)
misclass #0.001111111

#try different values of k
fit4<-knn(dat[train,],dat[-train,],cl=dat[train,11],k=4,prob=TRUE)
predicted<-fit4
t<-table(predicted,actual)
t
misclass<-sum(t[-which(t==diag(t))])/sum(t)
misclass #0.001666667

#k=10
fit10<-knn(dat[train,],dat[-train,],cl=dat[train,11],k=10,prob=TRUE)
predicted<-fit10
t<-table(predicted,actual)
t
misclass<-sum(t[-which(t==diag(t))])/sum(t)
misclass #0.0008333333

#k=20
fit20<-knn(dat[train,],dat[-train,],cl=dat[train,11],k=20,prob=TRUE)
predicted<-fit20
t<-table(predicted,actual)
t
misclass<-sum(t[-which(t==diag(t))])/sum(t)
misclass #0.0008333333 same as 10


#try naive bayes classifier
library(e1071)
fit.bayes<-naiveBayes(Class~TSH+T3+TT4+T4U+FTI+Age,data=dat)
summary(fit.bayes)
fit.bayes
pfit.bayes<-predict(fit.bayes,dat)
predicted<-pfit.bayes
actual<-dat[,11]
t<-table(predicted,actual)
t
misclass<-sum(t[-which(t==diag(t))])/sum(t)
misclass #0.05 
